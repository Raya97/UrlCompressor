package com.lioness.urlcompressor.util;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

/**
 * ‚úÖ Unit tests for MessageUtility ‚Äî static message generation and constants.
 */
class MessageUtilityTest {

    @Test
    @DisplayName("userAlreadyExists() returns correct message")
    void testUserAlreadyExistsMessage() {
        String username = "lioness";
        String expected = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ —ñ–º'—è–º lioness –≤–∂–µ —ñ—Å–Ω—É—î. –í–∏–±–µ—Ä—ñ—Ç—å —ñ–Ω—à–µ —ñ–º'—è.";
        assertEquals(expected, MessageUtility.userAlreadyExists(username));
    }

    @Test
    @DisplayName("userNotFound() returns correct message")
    void testUserNotFoundMessage() {
        String username = "ghost";
        String expected = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ —ñ–º'—è–º ghost –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π.";
        assertEquals(expected, MessageUtility.userNotFound(username));
    }

    @Test
    @DisplayName("All static fields return expected messages")
    void testStaticMessages() {
        // üìå Validate all important predefined messages
        assertEquals("–ù–µ–≤—ñ—Ä–Ω–∏–π —Ç–æ–∫–µ–Ω.", MessageUtility.INCORRECT_TOKEN_MESSAGE);
        assertEquals("–Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø–æ–≤–∏–Ω–Ω–æ –º—ñ—Å—Ç–∏—Ç–∏ –≤—ñ–¥ 5 –¥–æ 50 —Å–∏–º–≤–æ–ª—ñ–≤.", MessageUtility.USERNAME_REQUIREMENTS);
        assertEquals("–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ —â–æ–Ω–∞–π–º–µ–Ω—à–µ 8 —Å–∏–º–≤–æ–ª—ñ–≤, –∞ —Ç–∞–∫–æ–∂ —Ü–∏—Ñ—Ä–∏, –≤–µ–ª–∏–∫—ñ —Ç–∞ –º–∞–ª—ñ –ª—ñ—Ç–µ—Ä–∏.", MessageUtility.PASSWORD_REQUIREMENTS);
        assertEquals("–ù–µ–≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–æ–ª—å. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.", MessageUtility.INVALID_PASSWORD);
        assertEquals("URL-–∞–¥—Ä–µ—Å—É —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ.", MessageUtility.URL_CREATED);
        assertEquals("URL-–∞–¥—Ä–µ—Å—É —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ.", MessageUtility.URL_UPDATED);
        assertEquals("URL-–∞–¥—Ä–µ—Å—É —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ.", MessageUtility.URL_DELETED);
    }
}
